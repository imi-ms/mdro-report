package de.uni_muenster.imi.oegd.testdataGenerator

enum class CaseScope(val type: String) {
    MRSA("MRSA"),
    MRGN3("MRGN3"),
    MRGN4("MRGN4"),
    VRE("VRE")
}

enum class Casetype(val type: String) {
    STATIONAER("STATIONAER"),
    NACHSTATIONAER("NACHSTATIONAER"),
    VORSTATIONAER("VORSTATIONAER"),
    TEILSTATIONAER("TEILSTATIONAER"),
    AMBULANT("AMBULANT"),
    BEGLEITPERSON("BEGLEITPERSON"),
    GEPLANTER_FALL("GEPLANTER_FALL")
}

enum class Department(val clinic: String, val fa_code: String) {
    GYNAEKOLOGIE("Klinik für Gynäkologie", "FA_GYN"),
    HNO("Hals- Nasen- Ohrenklinik", "FA_HNO"),
    AUGE("Augenklinik", "FA_AUGE"),
    ANASESTHESIE("Anästhesie" , "FA_ANAES"),
    NEUROLOGIE("Neurologie", "FA_NEURO"),
    NEUROCHIRURGIE("Neurochirurgie", "FA_NEUCH"),
    KARDIOLOGIE("Department für Kardiologie u. Angiologie", "FA_KARD"),
    HAUT("Hautklinik", "FA_HAUT"),
    MEDIZINISCHE_KLINIK_D("Medizinische Klinik D", "FA_MEDD"),
    KINDERKLINIK("Kinderklinik, Schulkinder-Stration", "FA_KIALL")
}

enum class SmearType(val bodySiteDisplay: String, val display: String) {
    NASE("Nase", "Abstrich-oberflächlich"),
    RACHEN("Rachen", "Abstrich-oberflächlich"),
    NASE_RACHEN("Nase und Rachen", "Abstrich-oberflächlich"),
    BLUT_PERIPHER("Blut-peripher entnommen", "Blutkultur"),
    BLUT_ZENTRAL("Blut-zentral entnommen", "Blutkultur"),
    MITTELSTRAHLURIN("Mittelstrahl-Urin", "Mittelstrahl-Urin")
}

enum class GermType(val display: String, val SNOMED: String){
    S_AUREUS("Staphylococcus aureus", "3092008"),
    P_AERUGINOSA("Pseudomonas aeruginosa", "52499004"),
    K_AEROGENES("Klebsiella aerogenes", "62592009"),
    M_MORGANII("Morganella morganii", "243301005"),
    E_FAECALIS("Enterococcus faecalis", "78065002"),
    E_FAECIUM("Enterococcus faecium", "90272000"),
    E_COLI("Escherichia coli", "112283007"),
    E_HERMANNII("Escherichia hermannii", "85786000"),
    P_MIRABILIS("Proteus mirabilis", "73457008"),
    K_OXYTOCA("Klebsiella oxytoca", "40886007"),
    A_BAUMANNII("Acinetobacter baumannii", "91288006")
}

enum class AntibioticType(val LOINC: String, val display: String) {
    AMOXICILLIN_CLAVULANSAEURE("18862-3", "Amoxicillin/Clavulansäure"),
    AMPICILLIN_SULBACTAM("18865-6", "Ampicillin/Sulbactam"),
    AZITHROMYCIN("18866-4", "Azithromycin"),
    AZTREONAM("18868-0", "Aztreonam"),
    BENZYLPENICILLIN("18964-7", "Benzylpenicillin"),
    CEFACLOR("18874-8", "Cefaclor"),
    CEFAZOLIN("18878-9", "Cefazolin"),
    CEFEPIM("18879-7", "Cefepim"),
    CEFOTAXIM("18886-2", "Cefotaxim"),
    CEFOXITIN("18888-8", "Cefoxitin Screen"),
    CEFTAZIDIM("18893-8", "Ceftazidim"),
    CEFTOLOZAN_TAZOBACTAM("73602-5", "Ceftolozan/Tazobactam"),
    CIPROFLOXACIN("18906-8", "Ciprofloxacin"),
    CLARITHROMYCIN("18907-6", "Clarithromycin"),
    CLINDAMYCIN("18908-4", "Clindamycin"),
    COLISTIN("18912-6", "Colistin"),
    DAPTOMYCIN("35789-7", "Daptomycin"),
    ERYTHROMYCIN("18919-1", "Erythromycin"),
    FOSFOMYCIN("25596-8", "Fosfomycin"),
    FUSIDINSAEURE("18927-4", "Fusidinsäure"),
    GENTAMICIN("18928-2", "Gentamicin"),
    IMIPENEM("18932-4", "Imipenem"),
    INDUCED_CLINDAMYCIN("61188-9", "Induzierbare Clindamycin-Resistenz"),
    LEVOFLOXACIN("20629-2", "Levofloxacin"),
    LINEZOLID("29258-1", "Linezolid"),
    MEROPENEM("18943-1", "Meropenem"),
    MUPIROCIN("20389-3", "Mupirocin"),
    OXACILLIN("18961-3", "Oxacillin"),
    PIPERACILLIN("18969-6", "Piperacillin"),
    PIPERACILLIN_TAZOBACTAM("18970-4", "Piperacillin/Tazobactam"),
    QUINUPRISTIN_DALFOPRISTIN("23640-6", "Quinupristin/Dalfopristin"),
    RIFAMPICIN("", "Rifampicin"),
    TEICOPLANIN("18989-4", "Teicoplanin"),
    TETRACYCLIN("18993-6", "Tetracyclin"),
    TIGECYCLIN("42357-4", "Tigecyclin"),
    TOBRAMYCIN("18996-9", "Tobramycin"),
    TRIMETHOPRIM_SULFAMETHOXAZOL("18998-5", "Trimethoprim/Sulfamethoxazol"),
    VANCOMYCIN("19000-9", "Vancomycin")
}

enum class AntibioticsResult(val LOINC: String, val result: String) {
    RESISTANT("LA6676-6", "R"),
    SENSIBLE("LA24225-7", "S"),
    INTERMEDIARY("", "I"),
    UNKNOWN("", "")
}

interface ProbabilityEnum{
    val type: Any
    val relativeProbability: Double
}

enum class SpaType(override val type: String, override val relativeProbability: Double): ProbabilityEnum {
    T011("t011", 0.154),
    T032("t032", 0.146),
    T034("t034", 0.142),
    T003("t003", 0.119),
    T127("t127", 0.061),
    T304("t304", 0.034),
    T223("t223", 0.029),
    T008("t008", 0.025),
    T002("t002", 0.022),
    T2011("t2011", 0.015),
    T014("t014", 0.012),
    T899("t899", 0.012),
    T020("t020", 0.010),
    T045("t045", 0.010),
    T022("t022", 0.010),
    T359("t359", 0.009),
    T379("t379", 0.007),
    T015("t015", 0.007),
    T084("t084", 0.007),
    T005("t005", 0.006),
    T044("t044", 0.006),
    T091("t091", 0.006),
    T021("t021", 0.006),
    T688("t688", 0.005),
    T1451("t1451", 0.005),
    T608("t608", 0.005),
    T991("t991", 0.005),
    T012("t012", 0.004),
    T026("t026", 0.004),
    T264("t264", 0.004),
    T386("t386", 0.004),
    T1255("t1255", 0.004),
    T685("t685", 0.004),
    T108("t108", 0.004),
    T1107("t1107", 0.004),
    T571("t571", 0.003),
    T267("t267", 0.003),
    T5634("t5634", 0.003),
    T790("t790", 0.003),
    T010("t010", 0.003),
    T037("t037", 0.003),
    T1430("t1430", 0.003),
    T216("t216", 0.003),
    T6867("t6867", 0.003),
    T718("t718", 0.003),
    T893("t893", 0.003),
    T1139("t1139", 0.002),
    T1250("t1250", 0.002),
    T1610("t1610", 0.002),
    T1977("t1977", 0.002),
    T3243("t3243", 0.002),
    T004("t004", 0.002),
    T062("t062", 0.002),
    T067("t067", 0.002),
    T10159("t10159", 0.002),
    T130("t130", 0.002),
    T14228("t14228", 0.002),
    T151("t151", 0.002),
    T2123("t2123", 0.002),
    T294("t294", 0.002),
    T314("t314", 0.002),
    T355("t355", 0.002),
    T437("t437", 0.002),
    T4450("t4450", 0.002),
    T548("t548", 0.002),
    T578("t578", 0.002),
    T626("t626", 0.002),
    T7685("t7685", 0.002),
    T786("t786", 0.002),
    T025("t025", 0.001),
    T114("t114", 0.001),
    T1437("t1437", 0.001),
    T1456("t1456", 0.001),
    T177("t177", 0.001),
    T189("t189", 0.001),
    T2346("t2346", 0.001),
    T2576("t2576", 0.001),
    T2892("t2892", 0.001),
    T690("t690", 0.001),
    T728("t728", 0.001),
    T843("t843", 0.001)
}


enum class ST_MRGN(override val type: String, override val relativeProbability: Double) : ProbabilityEnum {
    `null`("null", 0.045),
    `10`("10", 0.016),
    `12`("12", 0.003),
    `14`("14", 0.002),
    `23`("23", 0.002),
    `38`("38", 0.023),
    `44`("44", 0.013),
    `46`("46", 0.005),
    `58`("58", 0.005),
    `62`("62", 0.003),
    `69`("69", 0.099),
    `73`("73", 0.005),
    `80`("80", 0.002),
    `88`("88", 0.015),
    `90`("90", 0.005),
    `95`("95", 0.003),
    `101`("101", 0.003),
    `117`("117", 0.005),
    `127`("127", 0.005),
    `131`("131", 0.362),
    `140`("140", 0.003),
    `156`("156", 0.002),
    `167`("167", 0.002),
    `215`("215", 0.002),
    `224`("224", 0.013),
    `226`("226", 0.002),
    `345`("345", 0.002),
    `349`("349", 0.006),
    `354`("354", 0.002),
    `357`("357", 0.005),
    `360`("360", 0.002),
    `361`("361", 0.003),
    `405`("405", 0.013),
    `410`("410", 0.015),
    `420`("420", 0.002),
    `428`("428", 0.002),
    `443`("443", 0.008),
    `448`("448", 0.002),
    `450`("450", 0.005),
    `453`("453", 0.016),
    `457`("457", 0.008),
    `491`("491", 0.003),
    `533`("533", 0.008),
    `542`("542", 0.002),
    `607`("607", 0.002),
    `609`("609", 0.005),
    `616`("616", 0.002),
    `617`("617", 0.003),
    `648`("648", 0.037),
    `744`("744", 0.021),
    `770`("770", 0.002),
    `773`("773", 0.003),
    `778`("778", 0.002),
    `963`("963", 0.002),
    `964`("964", 0.002),
    `999`("999", 0.002),
    `1011`("1011", 0.005),
    `1049`("1049", 0.002),
    `1163`("1163", 0.002),
    `1193`("1193", 0.067),
    `1196`("1196", 0.002),
    `1317`("1317", 0.006),
    `1380`("1380", 0.002),
    `1485`("1485", 0.002),
    `1695`("1695", 0.003),
    `1775`("1775", 0.002),
    `2179`("2179", 0.003),
    `2279`("2279", 0.008),
    `2711`("2711", 0.002),
    `3014`("3014", 0.002),
    `3268`("3268", 0.003),
    `3877`("3877", 0.002),
    `4213`("4213", 0.003),
    `4981`("4981", 0.005),
    `5614`("5614", 0.002),
    `6215`("6215", 0.010),
    `6438`("6438", 0.002),
    `7401`("7401", 0.002),
    `8371`("8371", 0.002),
    `9697`("9697", 0.002),
    `10320`("10320", 0.015),
    `10955`("10955", 0.002),
    `10993`("10993", 0.002),
    `11934`("11934", 0.002),
    `12637`("12637", 0.003),
    `12664`("12664", 0.002),
    `13455`("13455", 0.003),
    `13730`("13730", 0.003),
    `14026`("14026", 0.002),
    `14533`("14533", 0.002),
    `15441`("15441", 0.002),
    `15442`("15442", 0.002),
}

enum class VRE_ST(override val type: String, override val relativeProbability: Double) : ProbabilityEnum {
    `null`("", 0.033),
    `117`("117", 0.405),
    `1299`("1299", 0.030),
    `1424`("1424", 0.002),
    `17`("17", 0.013),
    `203`("203", 0.002),
    `2546`("2546", 0.002),
    `2557`("2557", 0.002),
    `262`("262", 0.003),
    `39`("39", 0.010),
    `721`("721", 0.003),
    `78`("78", 0.005),
    `80`("80", 0.479),
    unknown("unknown", 0.013),
}

enum class VRE_vanA(override val type: String, override val relativeProbability: Double) : ProbabilityEnum {
    failed("? (failed)", 0.018),
    not_found("? (not found)", 0.102),
    not_applicable("n/a", 0.786),
    vanA01("vanA01", 0.010),
    vanA02("vanA02", 0.012),
    vanA03("vanA03", 0.072),
}

enum class VRE_vanB(override val type: String, override val relativeProbability: Double) : ProbabilityEnum {
    new("? (new)", 0.002),
    not_found("? (not found)", 0.110),
    not_applicable("n/a", 0.786),
    `vanB04`("vanB04", 0.102),
}


enum class MRSA_ST(override val type: String, override val relativeProbability: Double) : ProbabilityEnum {
    `null`("null", 0.073),
    `1`("1", 0.077),
    `1176`("1176", 0.001),
    `121`("121", 0.002),
    `1232`("1232", 0.005),
    `130`("130", 0.001),
    `1413`("1413", 0.001),
    `1482`("1482", 0.001),
    `149`("149", 0.005),
    `152`("152", 0.009),
    `1535`("1535", 0.006),
    `1649`("1649", 0.001),
    `188`("188", 0.004),
    `1930`("1930", 0.001),
    `207`("207", 0.001),
    `22`("22", 0.174),
    `225`("225", 0.038),
    `2250`("2250", 0.004),
    `239`("239", 0.001),
    `2452`("2452", 0.001),
    `25`("25", 0.001),
    `2626`("2626", 0.004),
    `2802`("2802", 0.001),
    `30`("30", 0.011),
    `3074`("3074", 0.001),
    `338`("338", 0.004),
    `34`("34", 0.001),
    `39`("39", 0.004),
    `398`("398", 0.257),
    `4110`("4110", 0.001),
    `45`("45", 0.017),
    `5`("5", 0.053),
    `5050`("5050", 0.001),
    `508`("508", 0.001),
    `5258`("5258", 0.001),
    `573`("573", 0.005),
    `582`("582", 0.004),
    `5834`("5834", 0.001),
    `59`("59", 0.004),
    `5969`("5969", 0.001),
    `599`("599", 0.001),
    `6`("6", 0.072),
    `630`("630", 0.001),
    `6692`("6692", 0.001),
    `672`("672", 0.007),
    `7`("7", 0.002),
    `710`("710", 0.001),
    `7119`("7119", 0.001),
    `72`("72", 0.006),
    `737`("737", 0.002),
    `772`("772", 0.004),
    `789`("789", 0.001),
    `8`("8", 0.037),
    `80`("80", 0.005),
    `859`("859", 0.004),
    `87`("87", 0.001),
    `88`("88", 0.016),
    `9`("9", 0.024),
    `97`("97", 0.021),
    not_applicable("n/a", 0.001),
    unknown("unknown", 0.006),
}



enum class ClusterType(override val type: String, override val relativeProbability: Double): ProbabilityEnum {
    CLUSTER_68("68", 0.058),
    CLUSTER_569("569", 0.056),
    CLUSTER_44("44", 0.053),
    CLUSTER_49("49", 0.053),
    CLUSTER_88("88", 0.043),
    CLUSTER_159("159", 0.034),
    CLUSTER_181("181", 0.032),
    CLUSTER_48("48", 0.027),
    CLUSTER_877("877", 0.024),
    CLUSTER_882("882", 0.021),
    CLUSTER_604("604", 0.020),
    CLUSTER_158("158", 0.015),
    CLUSTER_367("367", 0.014),
    CLUSTER_347("347", 0.013),
    CLUSTER_892("892", 0.013),
    CLUSTER_432("432", 0.013),
    CLUSTER_131("131", 0.013),
    CLUSTER_110("110", 0.012),
    CLUSTER_2220("2220", 0.012),
    CLUSTER_256("256", 0.012),
    CLUSTER_1550("1550", 0.012),
    CLUSTER_65("65", 0.011),
    CLUSTER_16891("16891", 0.011),
    CLUSTER_1116("1116", 0.011),
    CLUSTER_76("76", 0.009),
    CLUSTER_3056("3056", 0.009),
    CLUSTER_60("60", 0.009),
    CLUSTER_598("598", 0.009),
    CLUSTER_10906("10906", 0.009),
    CLUSTER_3927("3927", 0.008),
    CLUSTER_1049("1049", 0.008),
    CLUSTER_15354("15354", 0.008),
    CLUSTER_2992("2992", 0.008),
    CLUSTER_70("70", 0.008),
    CLUSTER_1856("1856", 0.008),
    CLUSTER_2553("2553", 0.008),
    CLUSTER_2563("2563", 0.008),
    CLUSTER_3258("3258", 0.008),
    CLUSTER_626("626", 0.008),
    CLUSTER_1050("1050", 0.007),
    CLUSTER_1150("1150", 0.007),
    CLUSTER_11205("11205", 0.007),
    CLUSTER_1898("1898", 0.007),
    CLUSTER_858("858", 0.007),
    CLUSTER_763("763", 0.007),
    CLUSTER_14826("14826", 0.007),
    CLUSTER_24780("24780", 0.006),
    CLUSTER_499("499", 0.006),
    CLUSTER_2831("2831", 0.006),
    CLUSTER_1011("1011", 0.006),
    CLUSTER_1143("1143", 0.006),
    CLUSTER_176("176", 0.006),
    CLUSTER_174("174", 0.006),
    CLUSTER_3112("3112", 0.006),
    CLUSTER_105("105", 0.006),
    CLUSTER_4425("4425", 0.006),
    CLUSTER_1303("1303", 0.006),
    CLUSTER_10836("10836", 0.006),
    CLUSTER_510("510", 0.006),
    CLUSTER_2709("2709", 0.006),
    CLUSTER_392("392", 0.006),
    CLUSTER_22642("22642", 0.005),
    CLUSTER_2303("2303", 0.005),
    CLUSTER_5052("5052", 0.005),
    CLUSTER_1107("1107", 0.005),
    CLUSTER_8256("8256", 0.005),
    CLUSTER_2368("2368", 0.005),
    CLUSTER_3004("3004", 0.005),
    CLUSTER_96("96", 0.005),
    CLUSTER_396("396", 0.005),
    CLUSTER_91("91", 0.005),
    CLUSTER_457("457", 0.005),
    CLUSTER_1557("1557", 0.005),
    CLUSTER_6040("6040", 0.005),
    CLUSTER_824("824", 0.005),
    CLUSTER_3250("3250", 0.005),
    CLUSTER_393("393", 0.005),
    CLUSTER_1243("1243", 0.005),
    CLUSTER_16809("16809", 0.005),
    CLUSTER_21637("21637", 0.005),
    CLUSTER_19040("19040", 0.005),
    CLUSTER_122("122", 0.005),
    CLUSTER_3148("3148", 0.005),
    CLUSTER_12720("12720", 0.005),
    CLUSTER_188("188", 0.005),
    CLUSTER_1035("1035", 0.005),
    CLUSTER_4724("4724", 0.005),
    CLUSTER_739("739", 0.005),
    CLUSTER_15003("15003", 0.005),
    CLUSTER_213("213", 0.005),
    CLUSTER_963("963", 0.005),
    CLUSTER_758("758", 0.005)
}

//TODO: Hinzufügen von ST-Typen, vanA, vanB

data class AntibioticsAnalysis(val antibiotic: AntibioticType, val antibioticsResult: AntibioticsResult)