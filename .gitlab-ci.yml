image: gradle:8.6.0-jdk21-alpine

stages:
  - build
  - upload
  - release

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dhttp.proxyHost=wwwproxy.uni-muenster.de -Dhttp.proxyPort=3128 -Dhttps.proxyHost=wwwproxy.uni-muenster.de -Dhttps.proxyPort=3128 -Dhttps.nonProxyHosts=localhost,127.0.0.1,0.0.0.0,.wwu.de,.uni-muenster.de,.wwu.io,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,169.254.0.0/16"

build:
  stage: build
  tags:
    - docker
  script:
    - echo ${CI_COMMIT_REF_NAME} ${CI_DEFAULT_BRANCH} ${CI_COMMIT_TAG}
    - gradle shadowJar :webapp:war :webapp:shadowJar :testdataGenerator:shadowJar
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    paths:
      - build/libs/MREReport-Full.jar
      - webapp/build/libs/MREReport-Light.jar
      - webapp/build/libs/webapp.war
      - testdataGenerator/build/libs/MRETestdataGenerator.jar
  only:
    - master
    - tags


dockerize:
  stage: upload
    # Use the official docker image.
  image: docker:latest
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SUBMODULE_DEPTH: 1
  services:
    - docker:dind
  tags:
    - dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
    - |
      if [[ -n "$CI_COMMIT_TAG" ]]; then
        docker push "$CI_REGISTRY_IMAGE${CI_COMMIT_TAG}"
      fi
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_TAG != null



upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: '$CI_COMMIT_TAG != null'
  script:
    - |
      PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}"
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/libs/MREReport-Full.jar ${PACKAGE_REGISTRY_URL}/MREReport-${CI_COMMIT_TAG}-Full.jar
    - |
      PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}"
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file webapp/build/libs/MREReport-Light.jar ${PACKAGE_REGISTRY_URL}/MREReport-${CI_COMMIT_TAG}-Light.jar
    - |
      PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}"
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file webapp/build/libs/webapp.war ${PACKAGE_REGISTRY_URL}/webapp-${CI_COMMIT_TAG}.war
    - |
      PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}"
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file testdataGenerator/build/libs/MRETestdataGenerator.jar ${PACKAGE_REGISTRY_URL}/MRETestdataGenerator-${CI_COMMIT_TAG}.jar


release_job:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: release
  rules:
    - if: '$CI_COMMIT_TAG != null'
  needs:
    - job: build
      artifacts: true
  script:
    - PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}"
    - echo PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}"
  release:
    name: "Auto-Release $CI_COMMIT_SHORT_SHA"
    description: "Automatic created release $CI_COMMIT_TITLE"
    tag_name: "$CI_COMMIT_SHORT_SHA"
    assets:
      links:
        - name: MREReport-${CI_COMMIT_TAG}-Full.jar
          url: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/MREReport-${CI_COMMIT_TAG}-Full.jar
        - name: MREReport-${CI_COMMIT_TAG}-Light.jar
          url: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/MREReport-${CI_COMMIT_TAG}-Light.jar
        - name: webapp-${CI_COMMIT_TAG}.war
          url: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/webapp-${CI_COMMIT_TAG}.war
        - name: MRETestdataGenerator-${CI_COMMIT_TAG}.jar
          url: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/MRETestdataGenerator-${CI_COMMIT_TAG}.jar
